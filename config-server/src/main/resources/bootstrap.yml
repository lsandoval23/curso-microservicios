server:
  port: ${CUSTOM.SERVER.PORT:9000}

spring:
  application:
    name: config-server
  cloud:
    # Configuraciones para el config-server
    config:
      server:
        git:
          # URL del repositorio git que usará el config server para buscar los archivos de propiedades
          uri: https://github.com/lsandoval23/config-server-files.git
          # Credenciales en caso el repositorio sea privado
          username: 'lsandoval23'
          password: '{cipher}cb37fd8e991b6a9e43124ae3e38a5a4e6bcbb3203607032deb3b5359cee35f7108391545e7a67734cb2d63993b9dfd762513b1c09663a1658616812cb6e8f2f2'
          force-pull: false
          clone-on-start: true # Se hará un clone al iniciar el servicio
          default-label: main # Rama por defecto que se descargara localmente para obtener los archivos y buscará la rama main
          refresh-rate: 30     # Cada 30 s hará un pull para buscar cambios en el repositorio remoto
        encrypt:
          enabled: false  # true para habilitar el desencriptado automatico
eureka:
  # Configuraciones del lado del cliente, en este caso si queremos que se registre al servidor eureka
  client:
    register-with-eureka: true
    fetch-registry: true
    # Indicamos cual es el endpoint para aquel servicio que se quiera registrar como cliente en el eureka server
    service-url:
      defaultZona: http://localhost:8761/eureka

# Llave de encriptación, se tiene el endpoint /encrypt con el metodo POST para encriptar lo que se le pasa en el body.
encrypt:
  key: lsandoval
